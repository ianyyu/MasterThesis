{
  "version": 3,
  "sources": ["../../vue-countup-v2/src/countup.vue", "../../vue-countup-v2/node_modules/style-inject/dist/style-inject.es.js", "../../vue-countup-v2/node_modules/vue-runtime-helpers/dist/normalize-component.js"],
  "sourcesContent": ["<template>\n  <span />\n</template>\n\n<script>\n  import { CountUp } from 'countup.js';\n\n  const typeOf = type => object => Object.prototype.toString.call(object) === `[object ${type}]`;\n\n  // const isString = typeOf('String');\n  // const isObject = typeOf('Object');\n  const isFunction = typeOf('Function');\n\n  export default {\n    __countup__: CountUp,\n    name: 'VueCountUp',\n    props: {\n      delay: {\n        type: Number,\n        required: false,\n        default: 0,\n      },\n      endVal: {\n        type: Number,\n        required: true,\n      },\n      options: {\n        type: Object,\n        required: false,\n      },\n    },\n    data() {\n      return {\n        instance: null,\n      };\n    },\n    // computed: {},\n    watch: {\n      endVal: {\n        handler(value) {\n          const that = this;\n\n          if (that.instance && isFunction(that.instance.update)) {\n            that.instance.update(value);\n          }\n        },\n        deep: false\n      }\n    },\n    methods: {\n      create() {\n        const that = this;\n        if (that.instance) {\n          return;\n        }\n\n        const dom = that.$el;\n        const instance = new CountUp(\n          dom,\n          that.endVal,\n          that.options\n        );\n\n        if (instance.error) {\n          // error\n          return;\n        }\n\n        that.instance = instance;\n\n        if (that.delay < 0) {\n          that.$emit('ready', instance, CountUp);\n          return;\n        }\n\n        setTimeout(() => instance.start(() => that.$emit('ready', instance, CountUp)), that.delay);\n      },\n      destroy() {\n        const that = this;\n        that.instance = null;\n      },\n      printValue(value) {\n        const that = this;\n\n        if (that.instance && isFunction(that.instance.printValue)) {\n          return that.instance.printValue(value);\n        }\n      },\n      start(callback) {\n        const that = this;\n\n        if (that.instance && isFunction(that.instance.start)) {\n          return that.instance.start(callback);\n        }\n      },\n      pauseResume() {\n        const that = this;\n\n        if (that.instance && isFunction(that.instance.pauseResume)) {\n          return that.instance.pauseResume();\n        }\n      },\n      reset() {\n        const that = this;\n\n        if (that.instance && isFunction(that.instance.reset)) {\n          return that.instance.reset();\n        }\n      },\n      update(newEndVal) {\n        const that = this;\n\n        if (that.instance && isFunction(that.instance.update)) {\n          return that.instance.update(newEndVal);\n        }\n      }\n    },\n    // beforeCreate() {\n    //   const that = this;\n    //   console.log('beforeCreate');\n    // },\n    // created() {\n    //   const that = this;\n    //   console.log('created');\n    // },\n    // beforeMount() {\n    //   const that = this;\n    //   console.log('beforeMount');\n    // },\n    mounted() {\n      const that = this;\n      // console.log('mounted');\n      that.create();\n    },\n    // beforeUpdate() {\n    //   const that = this;\n    //   console.log('beforeUpdate');\n    // },\n    // updated() {\n    //   const that = this;\n    //   console.log('updated');\n    // },\n    // activated() {\n    //   const that = this;\n    //   console.log('activated');\n    // },\n    // deactivated() {\n    //   const that = this;\n    //   console.log('deactivated');\n    // },\n    beforeDestroy() {\n      const that = this;\n      // console.log('beforeDestroy');\n      that.destroy();\n    },\n    // destroyed() {\n    //   const that = this;\n    //   console.log('destroyed');\n    // },\n    // errorCaptured(err, vm, info) {\n    //   const that = this;\n    //   console.log('errorCaptured');\n    //   return true;\n    // },\n  };\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n", null, null],
  "mappings": "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",
  "names": ["i", "t", "n", "css", "ref", "insertAt", "document", "head", "getElementsByTagName", "style", "createElement", "type", "firstChild", "insertBefore", "appendChild", "styleSheet", "cssText", "createTextNode", "template", "script", "scopeId", "isFunctionalTemplate", "moduleIdentifier", "shadowMode", "createInjector", "createInjectorSSR", "createInjectorShadow", "hook", "options", "render", "staticRenderFns", "_compiled", "functional", "_scopeId", "context", "this", "$vnode", "ssrContext", "parent", "__VUE_SSR_CONTEXT__", "call", "_registeredComponents", "add", "_ssrRegister", "$root", "$options", "shadowRoot", "originalRender", "h", "existing", "beforeCreate", "concat"]
}
